// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default transpiler 1`] = `
"\\"use strict\\";

var M = require(\\"../main\\");

var $module = M.module(\\"/__fixtures__/code.js\\"),
    meta$f = M.meta($module, function (x) {
  return function (module, exports) {
    var ctx = M.frame(x);
    ctx.$.C = meta$C({
      f: ctx.$
    });
    ctx.$.module = module;
    ctx.$.exports = exports;
    return ctx.scope(this, new.target, 5);
  };
}, f_1, void 0, void 0, null, null, null, {}, [[\\"s\\", \\"1:0-1:31\\", 6], [\\"s\\", \\"3:0-3:12\\", 8], [\\"s\\", \\"21:0-24:2\\", 9]]),
    meta$fn1 = M.meta($module, function (x) {
  return function fn1() {
    var _fn1 = M.frame(x);

    return _fn1.scope(this, new.target, 5);
  };
}, fn1_1, void 0, void 0, \\"fn1\\", \\"21:14-24:1\\", meta$f, {
  v5: [\\"v5\\", \\"22:8-22:10\\", \\"21:29-24:1\\"]
}, [[\\"s\\", \\"22:2-22:16\\", 6], [\\"s\\", \\"23:2-23:55\\", 7]]),
    meta$C = M.meta($module, function (x) {
  return function _C(a) {
    var C = M.frame(x);
    C.$.a = a;
    return C.scope(this, new.target, 5);
  };
}, C_1, C_err, C_fin, \\"C\\", \\"5:0-19:1\\", meta$f, {
  v1: [\\"v1\\", \\"6:6-6:8\\", \\"5:14-19:1\\"],
  v2: [\\"v2\\", \\"8:10-8:12\\", \\"7:6-16:3\\"],
  v3: [\\"v3\\", \\"9:8-9:10\\", \\"5:0-19:1\\"],
  i: [\\"i\\", \\"11:15-11:16\\", \\"11:4-13:5\\"],
  i1: [\\"i\\", \\"14:13-14:14\\", \\"5:0-19:1\\"],
  v4: [\\"v4\\", \\"15:8-15:10\\", \\"5:0-19:1\\"],
  e: [\\"e\\", \\"16:11-16:12\\", \\"5:14-19:1\\"]
}, [[\\"s\\", \\"6:2-6:14\\", 6], [\\"s\\", \\"7:2-18:3\\", 7], [\\"s\\", \\"8:4-8:18\\", 8], [\\"s\\", \\"9:4-9:11\\", 9], [\\"s\\", \\"10:4-10:42\\", 10], [\\"s\\", \\"11:4-13:5\\", 13], [\\"s\\", \\"12:6-12:19\\", 15], [\\"s\\", \\"14:4-14:42\\", 18], [\\"s\\", \\"14:29-14:42\\", 20], [\\"s\\", \\"15:4-15:17\\", 23], [\\"s\\", \\"17:4-17:24\\", 25]]);
module.exports = M.exports(meta$f());

function C_err(s) {
  switch (s) {
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 17:
    case 18:
    case 22:
    case 23:
      return 28;

    case 14:
    case 15:
      return 29;

    case 16:
      return 31;

    case 19:
    case 20:
      return 32;

    case 21:
      return 34;

    default:
      return 1;
  }
}

function C_fin(s) {
  switch (s) {
    case 14:
    case 15:
      return 30;

    case 19:
    case 20:
      return 33;

    default:
      return 0;
  }
}

function C_1(p) {
  var C = this;

  for (;;) {
    try {
      switch (C.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"6:2-6:14\\")) === M.token) {
            C.$state = 6;
            return p;
          } else {
            C.$state = 6;
            continue;
          }

        case 6:
          C.$.v1 = 10;

          if ((p = M.brk(\\"s\\", \\"7:2-18:3\\")) === M.token) {
            C.$state = 7;
            return p;
          } else {
            C.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"8:4-8:18\\")) === M.token) {
            C.$state = 8;
            return p;
          } else {
            C.$state = 8;
            continue;
          }

        case 8:
          C.$.v2 = 11;

          if ((p = M.brk(\\"s\\", \\"9:4-9:11\\")) === M.token) {
            C.$state = 9;
            return p;
          } else {
            C.$state = 9;
            continue;
          }

        case 9:
          if ((p = M.brk(\\"s\\", \\"10:4-10:42\\")) === M.token) {
            C.$state = 10;
            return p;
          } else {
            C.$state = 10;
            continue;
          }

        case 10:
          if ((p = C.$$.f.mod.fn1(C.$.a)) === M.token) {
            C.$state = 11;
            return p;
          } else {
            C.$state = 11;
            continue;
          }

        case 11:
          if ((p = C.$$.f.mod.proc1(p, C.$$.f.v0, C.$.v1, C.$.v2, C.$.v3)) === M.token) {
            C.$state = 12;
            return p;
          } else {
            C.$state = 12;
            continue;
          }

        case 12:
          if ((p = M.brk(\\"s\\", \\"11:4-13:5\\")) === M.token) {
            C.$state = 13;
            return p;
          } else {
            C.$state = 13;
            continue;
          }

        case 13:
          C.$.loop = M.iterator(something);
          C.$state = 14;
          continue;

        case 14:
          if (!(C.$.i2 = C.$.loop.next()).done) {
            C.$.i = C.$.i2.value;

            if ((p = M.brk(\\"s\\", \\"12:6-12:19\\")) === M.token) {
              C.$state = 15;
              return p;
            } else {
              C.$state = 15;
              continue;
            }
          } else {
            C.$.fc = 17;
            C.$state = 16;
            continue;
          }

        case 15:
          if ((p = C.$$.f.mod.proc2(C.$.i)) === M.token) {
            C.$state = 14;
            return p;
          } else {
            C.$state = 14;
            continue;
          }

        case 16:
          if (C.$.loop.return) {
            C.$.loop.return();
          }

          C.$.ex = C.$.err1;
          C.$state = C.$.fc;
          continue;

        case 17:
          if ((p = M.brk(\\"s\\", \\"14:4-14:42\\")) === M.token) {
            C.$state = 18;
            return p;
          } else {
            C.$state = 18;
            continue;
          }

        case 18:
          C.$.loop1 = M.iterator(something);
          C.$state = 19;
          continue;

        case 19:
          if (!(C.$.i3 = C.$.loop1.next()).done) {
            C.$.i1 = C.$.i3.value;

            if ((p = M.brk(\\"s\\", \\"14:29-14:42\\")) === M.token) {
              C.$state = 20;
              return p;
            } else {
              C.$state = 20;
              continue;
            }
          } else {
            C.$.fc1 = 22;
            C.$state = 21;
            continue;
          }

        case 20:
          if ((p = C.$$.f.mod.proc3(C.$.i1)) === M.token) {
            C.$state = 19;
            return p;
          } else {
            C.$state = 19;
            continue;
          }

        case 21:
          if (C.$.loop1.return) {
            C.$.loop1.return();
          }

          C.$.ex = C.$.err2;
          C.$state = C.$.fc1;
          continue;

        case 22:
          if ((p = M.brk(\\"s\\", \\"15:4-15:17\\")) === M.token) {
            C.$state = 23;
            return p;
          } else {
            C.$state = 23;
            continue;
          }

        case 23:
          C.$.v4 = 100;
          C.$state = 26;
          continue;

        case 24:
          C.$.e = C.$.ex;

          if ((p = M.brk(\\"s\\", \\"17:4-17:24\\")) === M.token) {
            C.$state = 25;
            return p;
          } else {
            C.$state = 25;
            continue;
          }

        case 25:
          if ((p = C.$$.f.mod.proc4(C.$.e, C.$.v4, C.$.i1)) === M.token) {
            C.$state = 26;
            return p;
          } else {
            C.$state = 26;
            continue;
          }

        case 26:
          return C.pure();

        case 0:
          return C.pure(p);

        case 1:
          return C.raise(p);

        case 27:
          C.$state = 0;
          p = C.$.r;
          continue;

        case 28:
          C.$.ex = p;
          C.$state = 24;
          continue;

        case 29:
          C.$.fc = 24, C.$.err1 = p;
          C.$state = 16;
          continue;

        case 30:
          C.$.fc = 27, C.$.r = p;
          C.$state = 16;
          continue;

        case 31:
          C.$.ex = p;
          C.$state = 24;
          continue;

        case 32:
          C.$.fc1 = 24, C.$.err2 = p;
          C.$state = 21;
          continue;

        case 33:
          C.$.fc1 = 27, C.$.r = p;
          C.$state = 21;
          continue;

        case 34:
          C.$.ex = p;
          C.$state = 24;
          continue;

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      if ((p = ex, C.$state = C_err(C.$state)) !== 1) continue;
      return C.raise(ex);
    }
  }
}

function fn1_1(p) {
  var _fn1 = this,
      a,
      b,
      c;

  for (;;) {
    try {
      switch (_fn1.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"22:2-22:16\\")) === M.token) {
            _fn1.$state = 6;
            return p;
          } else {
            _fn1.$state = 6;
            continue;
          }

        case 6:
          _fn1.$.v5 = 10;

          if ((p = M.brk(\\"s\\", \\"23:2-23:55\\")) === M.token) {
            _fn1.$state = 7;
            return p;
          } else {
            _fn1.$state = 7;
            continue;
          }

        case 7:
          if ((p = _fn1.$$.f.mod.f2()) === M.token) {
            _fn1.$state = 8;
            return p;
          } else {
            _fn1.$state = 8;
            continue;
          }

        case 8:
          _fn1.$._ = p;
          c = _fn1.$$.f.C;

          if ((p = new c(_fn1.$$.f.v0, _fn1.$.v5)) === M.token) {
            _fn1.$state = 9;
            return p;
          } else {
            _fn1.$state = 9;
            continue;
          }

        case 9:
          c = M.constr(p, \\"23:37-23:50\\");
          b = M.constr([c], \\"23:36-23:51\\");
          a = M.constr({
            a: _fn1.$._,
            b: b
          }, \\"23:18-23:53\\");

          if ((p = _fn1.$$.f.mod.some(a)) === M.token) {
            _fn1.$state = 10;
            return p;
          } else {
            _fn1.$state = 10;
            continue;
          }

        case 10:
          return _fn1.pure(p);

        case 0:
          return _fn1.pure(p);

        case 1:
          return _fn1.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return _fn1.raise(ex);
    }
  }
}

function f_1(p) {
  var ctx = this,
      a;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"1:0-1:31\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          a = require(\\"mod\\");

          if ((p = M.unwrap(a, \\"1:16-1:30\\")) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          ({
            mod: ctx.$.mod
          } = p);

          if ((p = M.brk(\\"s\\", \\"3:0-3:12\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          ctx.$.v0 = 10;

          if ((p = M.brk(\\"s\\", \\"21:0-24:2\\")) === M.token) {
            ctx.$state = 9;
            return p;
          } else {
            ctx.$state = 9;
            continue;
          }

        case 9:
          ctx.$.exports.fn2 = meta$fn1({
            f: ctx.$
          });
          return ctx.pure();

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}"
`;

exports[`default transpiler 2`] = `
"\\"use strict\\";

var M = require(\\"../main\\");

var $module = M.module(\\"/__fixtures__/mod1.js\\"),
    meta$f10 = M.meta($module, function (x) {
  return function (module, exports) {
    var ctx = M.frame(x);
    ctx.$.run = meta$run({
      f: ctx.$
    });
    ctx.$.mapTest = meta$mapTest({
      f: ctx.$
    });
    ctx.$.flatMapTest = meta$flatMapTest({
      f: ctx.$
    });
    ctx.$.filterTest = meta$filterTest({
      f: ctx.$
    });
    ctx.$.findIndexTest = meta$findIndexTest({
      f: ctx.$
    });
    ctx.$.forEachTest = meta$forEachTest({
      f: ctx.$
    });
    ctx.$.reduceTest = meta$reduceTest({
      f: ctx.$
    });
    ctx.$.reduceRightTest = meta$reduceRightTest({
      f: ctx.$
    });
    ctx.$.arraySortTest = meta$arraySortTest({
      f: ctx.$
    });
    ctx.$.typedArraySortTest = meta$typedArraySortTest({
      f: ctx.$
    });
    ctx.$.someTest = meta$someTest({
      f: ctx.$
    });
    ctx.$.everyTest = meta$everyTest({
      f: ctx.$
    });
    ctx.$.module = module;
    ctx.$.exports = exports;
    return ctx.scope(this, new.target, 5);
  };
}, f_110, void 0, void 0, null, null, null, {}, [[\\"s\\", \\"1:0-1:29\\", 6], [\\"s\\", \\"2:0-2:34\\", 8], [\\"s\\", \\"4:0-4:10\\", 10], [\\"s\\", \\"13:0-13:6\\", 11], [\\"s\\", \\"14:0-14:6\\", 13]]),
    meta$everyTest = M.meta($module, function (x) {
  return function _everyTest(v) {
    var everyTest = M.frame(x);
    everyTest.$.v = v;
    return everyTest.scope(this, new.target, 5);
  };
}, everyTest_1, void 0, void 0, \\"everyTest\\", \\"131:7-150:1\\", meta$f10, {
  self: [\\"self\\", \\"132:8-132:12\\", \\"131:29-150:1\\"]
}, [[\\"s\\", \\"132:2-132:18\\", 6], [\\"s\\", \\"133:2-149:4\\", 7]]),
    meta$f9 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_19, void 0, void 0, null, \\"144:6-146:7\\", meta$everyTest, {
  i: [\\"i\\", \\"144:15-144:16\\", \\"131:29-150:1\\"],
  x: [\\"x\\", \\"144:18-144:19\\", \\"131:29-150:1\\"],
  t: [\\"t\\", \\"144:21-144:22\\", \\"131:29-150:1\\"]
}, [[\\"s\\", \\"145:8-145:20\\", 6]]),
    meta$f8 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$._this = this;
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_18, void 0, void 0, null, \\"136:6-139:7\\", meta$everyTest, {
  i: [\\"i\\", \\"136:15-136:16\\", \\"131:29-150:1\\"],
  x: [\\"x\\", \\"136:18-136:19\\", \\"131:29-150:1\\"],
  t: [\\"t\\", \\"136:21-136:22\\", \\"131:29-150:1\\"]
}, [[\\"s\\", \\"137:8-137:73\\", 6], [\\"s\\", \\"138:8-138:23\\", 8]]),
    meta$someTest = M.meta($module, function (x) {
  return function _someTest(v) {
    var someTest = M.frame(x);
    someTest.$.v = v;
    return someTest.scope(this, new.target, 5);
  };
}, someTest_1, void 0, void 0, \\"someTest\\", \\"110:7-129:1\\", meta$f10, {
  self: [\\"self\\", \\"111:8-111:12\\", \\"110:28-129:1\\"]
}, [[\\"s\\", \\"111:2-111:18\\", 6], [\\"s\\", \\"112:2-128:4\\", 7]]),
    meta$f7 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_17, void 0, void 0, null, \\"123:6-125:7\\", meta$someTest, {
  i: [\\"i\\", \\"123:15-123:16\\", \\"110:28-129:1\\"],
  x: [\\"x\\", \\"123:18-123:19\\", \\"110:28-129:1\\"],
  t: [\\"t\\", \\"123:21-123:22\\", \\"110:28-129:1\\"]
}, [[\\"s\\", \\"124:8-124:21\\", 6]]),
    meta$f6 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$._this = this;
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_16, void 0, void 0, null, \\"115:6-118:7\\", meta$someTest, {
  i: [\\"i\\", \\"115:15-115:16\\", \\"110:28-129:1\\"],
  x: [\\"x\\", \\"115:18-115:19\\", \\"110:28-129:1\\"],
  t: [\\"t\\", \\"115:21-115:22\\", \\"110:28-129:1\\"]
}, [[\\"s\\", \\"116:8-116:72\\", 6], [\\"s\\", \\"117:8-117:23\\", 8]]),
    meta$typedArraySortTest = M.meta($module, function (x) {
  return function _typedArraySortTest(v, w) {
    var typedArraySortTest = M.frame(x);
    typedArraySortTest.$.v = v;
    typedArraySortTest.$.w = w;
    return typedArraySortTest.scope(this, new.target, 5);
  };
}, typedArraySortTest_1, void 0, void 0, \\"typedArraySortTest\\", \\"104:7-108:1\\", meta$f10, {}, [[\\"s\\", \\"105:2-105:45\\", 6], [\\"s\\", \\"106:2-106:28\\", 8], [\\"s\\", \\"107:2-107:16\\", 10]]),
    meta$f5 = M.meta($module, function (x) {
  return function (a, b) {
    var ctx = M.frame(x);
    ctx.$.a = a;
    ctx.$.b = b;
    return ctx.scope(this, new.target, 5);
  };
}, f_15, void 0, void 0, null, \\"105:28-105:43\\", meta$typedArraySortTest, {
  a: [\\"a\\", \\"105:29-105:30\\", \\"104:41-108:1\\"],
  b: [\\"b\\", \\"105:32-105:33\\", \\"104:41-108:1\\"]
}, []),
    meta$arraySortTest = M.meta($module, function (x) {
  return function _arraySortTest(v, w) {
    var arraySortTest = M.frame(x);
    arraySortTest.$.v = v;
    arraySortTest.$.w = w;
    return arraySortTest.scope(this, new.target, 5);
  };
}, arraySortTest_1, void 0, void 0, \\"arraySortTest\\", \\"98:7-102:1\\", meta$f10, {}, [[\\"s\\", \\"99:2-99:40\\", 6], [\\"s\\", \\"100:2-100:23\\", 8], [\\"s\\", \\"101:2-101:16\\", 10]]),
    meta$f4 = M.meta($module, function (x) {
  return function (a, b) {
    var ctx = M.frame(x);
    ctx.$.a = a;
    ctx.$.b = b;
    return ctx.scope(this, new.target, 5);
  };
}, f_14, void 0, void 0, null, \\"99:23-99:38\\", meta$arraySortTest, {
  a: [\\"a\\", \\"99:24-99:25\\", \\"98:36-102:1\\"],
  b: [\\"b\\", \\"99:27-99:28\\", \\"98:36-102:1\\"]
}, []),
    meta$reduceRightTest = M.meta($module, function (x) {
  return function _reduceRightTest(v) {
    var reduceRightTest = M.frame(x);
    reduceRightTest.$.run = meta$run1({
      f: reduceRightTest.$$.f,
      reduceRightTest: reduceRightTest.$
    });
    reduceRightTest.$.v = v;
    return reduceRightTest.scope(this, new.target, 5);
  };
}, reduceRightTest_1, void 0, void 0, \\"reduceRightTest\\", \\"89:7-96:1\\", meta$f10, {
  run: [\\"run\\", \\"92:11-92:14\\", \\"89:7-96:1\\"]
}, [[\\"s\\", \\"90:2-90:8\\", 6], [\\"s\\", \\"91:2-91:73\\", 7]]),
    meta$run1 = M.meta($module, function (x) {
  return function _run(acc, i, _x, t) {
    var run = M.frame(x);
    run.$.acc = acc;
    run.$.i = i;
    run.$.x = _x;
    run.$.t = t;
    return run.scope(this, new.target, 5);
  };
}, run_11, void 0, void 0, \\"run\\", \\"92:2-95:3\\", meta$reduceRightTest, {
  acc: [\\"acc\\", \\"92:15-92:18\\", \\"89:35-96:1\\"],
  i: [\\"i\\", \\"92:20-92:21\\", \\"89:35-96:1\\"],
  x: [\\"x\\", \\"92:23-92:24\\", \\"89:35-96:1\\"],
  t: [\\"t\\", \\"92:26-92:27\\", \\"89:35-96:1\\"]
}, [[\\"s\\", \\"93:4-93:65\\", 6], [\\"s\\", \\"94:4-94:25\\", 8]]),
    meta$reduceTest = M.meta($module, function (x) {
  return function _reduceTest(v) {
    var reduceTest = M.frame(x);
    reduceTest.$.run = _meta$run({
      f: reduceTest.$$.f,
      reduceTest: reduceTest.$
    });
    reduceTest.$.v = v;
    return reduceTest.scope(this, new.target, 5);
  };
}, reduceTest_1, void 0, void 0, \\"reduceTest\\", \\"80:7-87:1\\", meta$f10, {
  run: [\\"run\\", \\"83:11-83:14\\", \\"80:7-87:1\\"]
}, [[\\"s\\", \\"81:2-81:8\\", 6], [\\"s\\", \\"82:2-82:63\\", 7]]),
    _meta$run = M.meta($module, function (x) {
  return function _run(acc, i, _x, t) {
    var run = M.frame(x);
    run.$.acc = acc;
    run.$.i = i;
    run.$.x = _x;
    run.$.t = t;
    return run.scope(this, new.target, 5);
  };
}, _run_1, void 0, void 0, \\"run\\", \\"83:2-86:3\\", meta$reduceTest, {
  acc: [\\"acc\\", \\"83:15-83:18\\", \\"80:30-87:1\\"],
  i: [\\"i\\", \\"83:20-83:21\\", \\"80:30-87:1\\"],
  x: [\\"x\\", \\"83:23-83:24\\", \\"80:30-87:1\\"],
  t: [\\"t\\", \\"83:26-83:27\\", \\"80:30-87:1\\"]
}, [[\\"s\\", \\"84:4-84:60\\", 6], [\\"s\\", \\"85:4-85:25\\", 8]]),
    meta$forEachTest = M.meta($module, function (x) {
  return function _forEachTest(v) {
    var forEachTest = M.frame(x);
    forEachTest.$.v = v;
    return forEachTest.scope(this, new.target, 5);
  };
}, forEachTest_1, void 0, void 0, \\"forEachTest\\", \\"68:7-78:1\\", meta$f10, {
  self: [\\"self\\", \\"70:8-70:12\\", \\"68:31-78:1\\"]
}, [[\\"s\\", \\"69:2-69:8\\", 6], [\\"s\\", \\"70:2-70:18\\", 7], [\\"s\\", \\"71:2-77:4\\", 8]]),
    meta$f3 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_13, void 0, void 0, null, \\"73:4-75:5\\", meta$forEachTest, {
  i: [\\"i\\", \\"73:13-73:14\\", \\"68:31-78:1\\"],
  x: [\\"x\\", \\"73:16-73:17\\", \\"68:31-78:1\\"],
  t: [\\"t\\", \\"73:19-73:20\\", \\"68:31-78:1\\"]
}, [[\\"s\\", \\"74:6-74:60\\", 6]]),
    meta$findIndexTest = M.meta($module, function (x) {
  return function _findIndexTest(v) {
    var findIndexTest = M.frame(x);
    findIndexTest.$.v = v;
    return findIndexTest.scope(this, new.target, 5);
  };
}, findIndexTest_1, void 0, void 0, \\"findIndexTest\\", \\"55:7-66:1\\", meta$f10, {
  self: [\\"self\\", \\"57:8-57:12\\", \\"55:33-66:1\\"]
}, [[\\"s\\", \\"56:2-56:8\\", 6], [\\"s\\", \\"57:2-57:18\\", 7], [\\"s\\", \\"58:2-65:4\\", 8]]),
    meta$f2 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$._this = this;
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_12, void 0, void 0, null, \\"60:4-63:5\\", meta$findIndexTest, {
  i: [\\"i\\", \\"60:13-60:14\\", \\"55:33-66:1\\"],
  x: [\\"x\\", \\"60:16-60:17\\", \\"55:33-66:1\\"],
  t: [\\"t\\", \\"60:19-60:20\\", \\"55:33-66:1\\"]
}, [[\\"s\\", \\"61:6-61:75\\", 6], [\\"s\\", \\"62:6-62:21\\", 8]]),
    meta$filterTest = M.meta($module, function (x) {
  return function _filterTest(v) {
    var filterTest = M.frame(x);
    filterTest.$.v = v;
    return filterTest.scope(this, new.target, 5);
  };
}, filterTest_1, void 0, void 0, \\"filterTest\\", \\"42:7-53:1\\", meta$f10, {
  self: [\\"self\\", \\"44:8-44:12\\", \\"42:30-53:1\\"]
}, [[\\"s\\", \\"43:2-43:8\\", 6], [\\"s\\", \\"44:2-44:18\\", 7], [\\"s\\", \\"45:2-52:4\\", 8]]),
    meta$f1 = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$._this = this;
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_11, void 0, void 0, null, \\"47:4-50:5\\", meta$filterTest, {
  i: [\\"i\\", \\"47:13-47:14\\", \\"42:30-53:1\\"],
  x: [\\"x\\", \\"47:16-47:17\\", \\"42:30-53:1\\"],
  t: [\\"t\\", \\"47:19-47:20\\", \\"42:30-53:1\\"]
}, [[\\"s\\", \\"48:6-48:72\\", 6], [\\"s\\", \\"49:6-49:21\\", 8]]),
    meta$flatMapTest = M.meta($module, function (x) {
  return function _flatMapTest(v) {
    var flatMapTest = M.frame(x);
    flatMapTest.$.v = v;
    return flatMapTest.scope(this, new.target, 5);
  };
}, flatMapTest_1, void 0, void 0, \\"flatMapTest\\", \\"29:7-40:1\\", meta$f10, {
  self: [\\"self\\", \\"31:8-31:12\\", \\"29:31-40:1\\"]
}, [[\\"s\\", \\"30:2-30:8\\", 6], [\\"s\\", \\"31:2-31:18\\", 7], [\\"s\\", \\"32:2-39:4\\", 8]]),
    _meta$f = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$._this = this;
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, _f_1, void 0, void 0, null, \\"34:4-37:5\\", meta$flatMapTest, {
  i: [\\"i\\", \\"34:13-34:14\\", \\"29:31-40:1\\"],
  x: [\\"x\\", \\"34:16-34:17\\", \\"29:31-40:1\\"],
  t: [\\"t\\", \\"34:19-34:20\\", \\"29:31-40:1\\"]
}, [[\\"s\\", \\"35:6-35:73\\", 6], [\\"s\\", \\"36:6-36:27\\", 8]]),
    meta$mapTest = M.meta($module, function (x) {
  return function _mapTest(v) {
    var mapTest = M.frame(x);
    mapTest.$.v = v;
    return mapTest.scope(this, new.target, 5);
  };
}, mapTest_1, void 0, void 0, \\"mapTest\\", \\"16:7-27:1\\", meta$f10, {
  self: [\\"self\\", \\"18:8-18:12\\", \\"16:27-27:1\\"]
}, [[\\"s\\", \\"17:2-17:8\\", 6], [\\"s\\", \\"18:2-18:18\\", 7], [\\"s\\", \\"19:2-26:4\\", 8]]),
    meta$f = M.meta($module, function (x) {
  return function (i, _x, t) {
    var ctx = M.frame(x);
    ctx.$._this = this;
    ctx.$.i = i;
    ctx.$.x = _x;
    ctx.$.t = t;
    return ctx.scope(this, new.target, 5);
  };
}, f_1, void 0, void 0, null, \\"21:4-24:5\\", meta$mapTest, {
  i: [\\"i\\", \\"21:13-21:14\\", \\"16:27-27:1\\"],
  x: [\\"x\\", \\"21:16-21:17\\", \\"16:27-27:1\\"],
  t: [\\"t\\", \\"21:19-21:20\\", \\"16:27-27:1\\"]
}, [[\\"s\\", \\"22:6-22:69\\", 6], [\\"s\\", \\"23:6-23:19\\", 8]]),
    meta$run = M.meta($module, function (x) {
  return function _run(i = 1) {
    var run = M.frame(x);
    run.$.i = i;
    return run.scope(this, new.target, 5);
  };
}, run_1, void 0, void 0, \\"run\\", \\"6:0-11:1\\", meta$f10, {}, [[\\"s\\", \\"7:2-7:9\\", 6], [\\"s\\", \\"8:2-8:23\\", 7], [\\"s\\", \\"9:2-9:9\\", 10], [\\"s\\", \\"10:2-10:31\\", 11]]);

module.exports = M.exports(meta$f10());

function run_1(p) {
  var run = this,
      a;

  for (;;) {
    try {
      switch (run.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"7:2-7:9\\")) === M.token) {
            run.$state = 6;
            return p;
          } else {
            run.$state = 6;
            continue;
          }

        case 6:
          run.$$.f.j += run.$.i;

          if ((p = M.brk(\\"s\\", \\"8:2-8:23\\")) === M.token) {
            run.$state = 7;
            return p;
          } else {
            run.$state = 7;
            continue;
          }

        case 7:
          a = run.$.i++;

          if ((p = run.$$.f.M2.f1(a)) === M.token) {
            run.$state = 8;
            return p;
          } else {
            run.$state = 8;
            continue;
          }

        case 8:
          if ((p = run.$$.f.M2.f2(p, run.$.i)) === M.token) {
            run.$state = 9;
            return p;
          } else {
            run.$state = 9;
            continue;
          }

        case 9:
          if ((p = M.brk(\\"s\\", \\"9:2-9:9\\")) === M.token) {
            run.$state = 10;
            return p;
          } else {
            run.$state = 10;
            continue;
          }

        case 10:
          run.$$.f.j += run.$.i;

          if ((p = M.brk(\\"s\\", \\"10:2-10:31\\")) === M.token) {
            run.$state = 11;
            return p;
          } else {
            run.$state = 11;
            continue;
          }

        case 11:
          if ((p = console.log(\`i:\${run.$.i},j:\${run.$$.f.j}\`)) === M.token) {
            run.$state = 12;
            return p;
          } else {
            run.$state = 12;
            continue;
          }

        case 12:
          return run.pure();

        case 0:
          return run.pure(p);

        case 1:
          return run.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return run.raise(ex);
    }
  }
}

function f_1(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"22:6-22:69\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`map@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.mapTest.v}/\${ctx.$$.mapTest.self === ctx.$._this}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"23:6-23:19\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          return ctx.pure(ctx.$.i + ctx.$.x);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function mapTest_1(p) {
  var mapTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (mapTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"17:2-17:8\\")) === M.token) {
            mapTest.$state = 6;
            return p;
          } else {
            mapTest.$state = 6;
            continue;
          }

        case 6:
          mapTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"18:2-18:18\\")) === M.token) {
            mapTest.$state = 7;
            return p;
          } else {
            mapTest.$state = 7;
            continue;
          }

        case 7:
          mapTest.$.self = M.constr({}, \\"18:15-18:17\\");

          if ((p = M.brk(\\"s\\", \\"19:2-26:4\\")) === M.token) {
            mapTest.$state = 8;
            return p;
          } else {
            mapTest.$state = 8;
            continue;
          }

        case 8:
          a = mapTest.$$.f.rt.map;
          b = mapTest.$.v;

          if ((p = a.call(b, meta$f({
            f: mapTest.$$.f,
            mapTest: mapTest.$
          }), mapTest.$.self)) === M.token) {
            mapTest.$state = 9;
            return p;
          } else {
            mapTest.$state = 9;
            continue;
          }

        case 9:
          return mapTest.pure(p);

        case 0:
          return mapTest.pure(p);

        case 1:
          return mapTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return mapTest.raise(ex);
    }
  }
}

function _f_1(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"35:6-35:73\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`flatMap@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.flatMapTest.v}/\${ctx.$$.flatMapTest.self === ctx.$._this}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"36:6-36:27\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          return ctx.pure(M.constr([ctx.$.i, ctx.$.x, ctx.$.i + ctx.$.x], \\"36:13-36:26\\"));

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function flatMapTest_1(p) {
  var flatMapTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (flatMapTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"30:2-30:8\\")) === M.token) {
            flatMapTest.$state = 6;
            return p;
          } else {
            flatMapTest.$state = 6;
            continue;
          }

        case 6:
          flatMapTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"31:2-31:18\\")) === M.token) {
            flatMapTest.$state = 7;
            return p;
          } else {
            flatMapTest.$state = 7;
            continue;
          }

        case 7:
          flatMapTest.$.self = M.constr({}, \\"31:15-31:17\\");

          if ((p = M.brk(\\"s\\", \\"32:2-39:4\\")) === M.token) {
            flatMapTest.$state = 8;
            return p;
          } else {
            flatMapTest.$state = 8;
            continue;
          }

        case 8:
          a = flatMapTest.$$.f.rt.flatMap;
          b = flatMapTest.$.v;

          if ((p = a.call(b, _meta$f({
            f: flatMapTest.$$.f,
            flatMapTest: flatMapTest.$
          }), flatMapTest.$.self)) === M.token) {
            flatMapTest.$state = 9;
            return p;
          } else {
            flatMapTest.$state = 9;
            continue;
          }

        case 9:
          return flatMapTest.pure(p);

        case 0:
          return flatMapTest.pure(p);

        case 1:
          return flatMapTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return flatMapTest.raise(ex);
    }
  }
}

function f_11(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"48:6-48:72\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`filter@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.filterTest.v}/\${ctx.$$.filterTest.self === ctx.$._this}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"49:6-49:21\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          return ctx.pure(ctx.$.i !== 2);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function filterTest_1(p) {
  var filterTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (filterTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"43:2-43:8\\")) === M.token) {
            filterTest.$state = 6;
            return p;
          } else {
            filterTest.$state = 6;
            continue;
          }

        case 6:
          filterTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"44:2-44:18\\")) === M.token) {
            filterTest.$state = 7;
            return p;
          } else {
            filterTest.$state = 7;
            continue;
          }

        case 7:
          filterTest.$.self = M.constr({}, \\"44:15-44:17\\");

          if ((p = M.brk(\\"s\\", \\"45:2-52:4\\")) === M.token) {
            filterTest.$state = 8;
            return p;
          } else {
            filterTest.$state = 8;
            continue;
          }

        case 8:
          a = filterTest.$$.f.rt.filter;
          b = filterTest.$.v;

          if ((p = a.call(b, meta$f1({
            f: filterTest.$$.f,
            filterTest: filterTest.$
          }), filterTest.$.self)) === M.token) {
            filterTest.$state = 9;
            return p;
          } else {
            filterTest.$state = 9;
            continue;
          }

        case 9:
          return filterTest.pure(p);

        case 0:
          return filterTest.pure(p);

        case 1:
          return filterTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return filterTest.raise(ex);
    }
  }
}

function f_12(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"61:6-61:75\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`findIndex@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.findIndexTest.v}/\${ctx.$$.findIndexTest.self === ctx.$._this}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"62:6-62:21\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          return ctx.pure(ctx.$.i === 2);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function findIndexTest_1(p) {
  var findIndexTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (findIndexTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"56:2-56:8\\")) === M.token) {
            findIndexTest.$state = 6;
            return p;
          } else {
            findIndexTest.$state = 6;
            continue;
          }

        case 6:
          findIndexTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"57:2-57:18\\")) === M.token) {
            findIndexTest.$state = 7;
            return p;
          } else {
            findIndexTest.$state = 7;
            continue;
          }

        case 7:
          findIndexTest.$.self = M.constr({}, \\"57:15-57:17\\");

          if ((p = M.brk(\\"s\\", \\"58:2-65:4\\")) === M.token) {
            findIndexTest.$state = 8;
            return p;
          } else {
            findIndexTest.$state = 8;
            continue;
          }

        case 8:
          a = findIndexTest.$$.f.rt.findIndex;
          b = findIndexTest.$.v;

          if ((p = a.call(b, meta$f2({
            f: findIndexTest.$$.f,
            findIndexTest: findIndexTest.$
          }), findIndexTest.$.self)) === M.token) {
            findIndexTest.$state = 9;
            return p;
          } else {
            findIndexTest.$state = 9;
            continue;
          }

        case 9:
          return findIndexTest.pure(p);

        case 0:
          return findIndexTest.pure(p);

        case 1:
          return findIndexTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return findIndexTest.raise(ex);
    }
  }
}

function f_13(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"74:6-74:60\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`forEachTest@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.forEachTest.v}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          return ctx.pure();

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function forEachTest_1(p) {
  var forEachTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (forEachTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"69:2-69:8\\")) === M.token) {
            forEachTest.$state = 6;
            return p;
          } else {
            forEachTest.$state = 6;
            continue;
          }

        case 6:
          forEachTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"70:2-70:18\\")) === M.token) {
            forEachTest.$state = 7;
            return p;
          } else {
            forEachTest.$state = 7;
            continue;
          }

        case 7:
          forEachTest.$.self = M.constr({}, \\"70:15-70:17\\");

          if ((p = M.brk(\\"s\\", \\"71:2-77:4\\")) === M.token) {
            forEachTest.$state = 8;
            return p;
          } else {
            forEachTest.$state = 8;
            continue;
          }

        case 8:
          a = forEachTest.$$.f.rt.forEach;
          b = forEachTest.$.v;

          if ((p = a.call(b, meta$f3({
            f: forEachTest.$$.f,
            forEachTest: forEachTest.$
          }), forEachTest.$.self)) === M.token) {
            forEachTest.$state = 9;
            return p;
          } else {
            forEachTest.$state = 9;
            continue;
          }

        case 9:
          return forEachTest.pure(p);

        case 0:
          return forEachTest.pure(p);

        case 1:
          return forEachTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return forEachTest.raise(ex);
    }
  }
}

function _run_1(p) {
  var run = this;

  for (;;) {
    try {
      switch (run.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"84:4-84:60\\")) === M.token) {
            run.$state = 6;
            return p;
          } else {
            run.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`reduce:\${run.$.acc}@\${run.$.x}[\${run.$$.f.j++}]:\${run.$.t === run.$$.reduceTest.v}\`, run.$.i)) === M.token) {
            run.$state = 7;
            return p;
          } else {
            run.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"85:4-85:25\\")) === M.token) {
            run.$state = 8;
            return p;
          } else {
            run.$state = 8;
            continue;
          }

        case 8:
          return run.pure(\`\${run.$.acc}/\${run.$.i}\`);

        case 0:
          return run.pure(p);

        case 1:
          return run.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return run.raise(ex);
    }
  }
}

function reduceTest_1(p) {
  var reduceTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (reduceTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"81:2-81:8\\")) === M.token) {
            reduceTest.$state = 6;
            return p;
          } else {
            reduceTest.$state = 6;
            continue;
          }

        case 6:
          reduceTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"82:2-82:63\\")) === M.token) {
            reduceTest.$state = 7;
            return p;
          } else {
            reduceTest.$state = 7;
            continue;
          }

        case 7:
          a = reduceTest.$$.f.rt.reduce;
          b = reduceTest.$.v;

          if ((p = a.call(b, reduceTest.$.run, \\"~\\")) === M.token) {
            reduceTest.$state = 8;
            return p;
          } else {
            reduceTest.$state = 8;
            continue;
          }

        case 8:
          reduceTest.$._ = p;
          a = reduceTest.$$.f.rt.reduce;
          b = reduceTest.$.v;

          if ((p = a.call(b, reduceTest.$.run)) === M.token) {
            reduceTest.$state = 9;
            return p;
          } else {
            reduceTest.$state = 9;
            continue;
          }

        case 9:
          a = M.constr([reduceTest.$._, p], \\"82:9-82:62\\");
          return reduceTest.pure(a);

        case 0:
          return reduceTest.pure(p);

        case 1:
          return reduceTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return reduceTest.raise(ex);
    }
  }
}

function run_11(p) {
  var run = this;

  for (;;) {
    try {
      switch (run.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"93:4-93:65\\")) === M.token) {
            run.$state = 6;
            return p;
          } else {
            run.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`reduceRight:\${run.$.acc}@\${run.$.x}[\${run.$$.f.j++}]:\${run.$.t === run.$$.reduceRightTest.v}\`, run.$.i)) === M.token) {
            run.$state = 7;
            return p;
          } else {
            run.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"94:4-94:25\\")) === M.token) {
            run.$state = 8;
            return p;
          } else {
            run.$state = 8;
            continue;
          }

        case 8:
          return run.pure(\`\${run.$.acc}/\${run.$.i}\`);

        case 0:
          return run.pure(p);

        case 1:
          return run.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return run.raise(ex);
    }
  }
}

function reduceRightTest_1(p) {
  var reduceRightTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (reduceRightTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"90:2-90:8\\")) === M.token) {
            reduceRightTest.$state = 6;
            return p;
          } else {
            reduceRightTest.$state = 6;
            continue;
          }

        case 6:
          reduceRightTest.$$.f.j = 0;

          if ((p = M.brk(\\"s\\", \\"91:2-91:73\\")) === M.token) {
            reduceRightTest.$state = 7;
            return p;
          } else {
            reduceRightTest.$state = 7;
            continue;
          }

        case 7:
          a = reduceRightTest.$$.f.rt.reduceRight;
          b = reduceRightTest.$.v;

          if ((p = a.call(b, reduceRightTest.$.run, \\"~\\")) === M.token) {
            reduceRightTest.$state = 8;
            return p;
          } else {
            reduceRightTest.$state = 8;
            continue;
          }

        case 8:
          reduceRightTest.$._ = p;
          a = reduceRightTest.$$.f.rt.reduceRight;
          b = reduceRightTest.$.v;

          if ((p = a.call(b, reduceRightTest.$.run)) === M.token) {
            reduceRightTest.$state = 9;
            return p;
          } else {
            reduceRightTest.$state = 9;
            continue;
          }

        case 9:
          a = M.constr([reduceRightTest.$._, p], \\"91:9-91:72\\");
          return reduceRightTest.pure(a);

        case 0:
          return reduceRightTest.pure(p);

        case 1:
          return reduceRightTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return reduceRightTest.raise(ex);
    }
  }
}

function f_14(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          return ctx.pure(ctx.$.a - ctx.$.b);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function arraySortTest_1(p) {
  var arraySortTest = this,
      a;

  for (;;) {
    try {
      switch (arraySortTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"99:2-99:40\\")) === M.token) {
            arraySortTest.$state = 6;
            return p;
          } else {
            arraySortTest.$state = 6;
            continue;
          }

        case 6:
          a = arraySortTest.$$.f.rt.arraySort;

          if ((p = a.call(arraySortTest.$.v, meta$f4())) === M.token) {
            arraySortTest.$state = 7;
            return p;
          } else {
            arraySortTest.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"100:2-100:23\\")) === M.token) {
            arraySortTest.$state = 8;
            return p;
          } else {
            arraySortTest.$state = 8;
            continue;
          }

        case 8:
          a = arraySortTest.$$.f.rt.arraySort;

          if ((p = a.call(arraySortTest.$.w)) === M.token) {
            arraySortTest.$state = 9;
            return p;
          } else {
            arraySortTest.$state = 9;
            continue;
          }

        case 9:
          if ((p = M.brk(\\"s\\", \\"101:2-101:16\\")) === M.token) {
            arraySortTest.$state = 10;
            return p;
          } else {
            arraySortTest.$state = 10;
            continue;
          }

        case 10:
          return arraySortTest.pure(M.constr([arraySortTest.$.v, arraySortTest.$.w], \\"101:9-101:15\\"));

        case 0:
          return arraySortTest.pure(p);

        case 1:
          return arraySortTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return arraySortTest.raise(ex);
    }
  }
}

function f_15(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          return ctx.pure(ctx.$.a - ctx.$.b);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function typedArraySortTest_1(p) {
  var typedArraySortTest = this,
      a;

  for (;;) {
    try {
      switch (typedArraySortTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"105:2-105:45\\")) === M.token) {
            typedArraySortTest.$state = 6;
            return p;
          } else {
            typedArraySortTest.$state = 6;
            continue;
          }

        case 6:
          a = typedArraySortTest.$$.f.rt.typedArraySort;

          if ((p = a.call(typedArraySortTest.$.v, meta$f5())) === M.token) {
            typedArraySortTest.$state = 7;
            return p;
          } else {
            typedArraySortTest.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"106:2-106:28\\")) === M.token) {
            typedArraySortTest.$state = 8;
            return p;
          } else {
            typedArraySortTest.$state = 8;
            continue;
          }

        case 8:
          a = typedArraySortTest.$$.f.rt.typedArraySort;

          if ((p = a.call(typedArraySortTest.$.w)) === M.token) {
            typedArraySortTest.$state = 9;
            return p;
          } else {
            typedArraySortTest.$state = 9;
            continue;
          }

        case 9:
          if ((p = M.brk(\\"s\\", \\"107:2-107:16\\")) === M.token) {
            typedArraySortTest.$state = 10;
            return p;
          } else {
            typedArraySortTest.$state = 10;
            continue;
          }

        case 10:
          return typedArraySortTest.pure(M.constr([typedArraySortTest.$.v, typedArraySortTest.$.w], \\"107:9-107:15\\"));

        case 0:
          return typedArraySortTest.pure(p);

        case 1:
          return typedArraySortTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return typedArraySortTest.raise(ex);
    }
  }
}

function f_16(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"116:8-116:72\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`some@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.someTest.v}/\${ctx.$$.someTest.self === ctx.$._this}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"117:8-117:23\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          return ctx.pure(ctx.$.i === 2);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function f_17(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"124:8-124:21\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          return ctx.pure(false);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function someTest_1(p) {
  var someTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (someTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"111:2-111:18\\")) === M.token) {
            someTest.$state = 6;
            return p;
          } else {
            someTest.$state = 6;
            continue;
          }

        case 6:
          someTest.$.self = M.constr({}, \\"111:15-111:17\\");

          if ((p = M.brk(\\"s\\", \\"112:2-128:4\\")) === M.token) {
            someTest.$state = 7;
            return p;
          } else {
            someTest.$state = 7;
            continue;
          }

        case 7:
          a = someTest.$$.f.rt.some;
          b = someTest.$.v;

          if ((p = a.call(b, meta$f6({
            f: someTest.$$.f,
            someTest: someTest.$
          }), someTest.$.self)) === M.token) {
            someTest.$state = 8;
            return p;
          } else {
            someTest.$state = 8;
            continue;
          }

        case 8:
          someTest.$._ = p;
          a = someTest.$$.f.rt.some;
          b = someTest.$.v;

          if ((p = a.call(b, meta$f7(), someTest.$.self)) === M.token) {
            someTest.$state = 9;
            return p;
          } else {
            someTest.$state = 9;
            continue;
          }

        case 9:
          a = M.constr([someTest.$._, p], \\"112:9-128:3\\");
          return someTest.pure(a);

        case 0:
          return someTest.pure(p);

        case 1:
          return someTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return someTest.raise(ex);
    }
  }
}

function f_18(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"137:8-137:73\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          if ((p = console.log(\`every@\${ctx.$.x}[\${ctx.$$.f.j++}]:\${ctx.$.t === ctx.$$.everyTest.v}/\${ctx.$$.everyTest.self === ctx.$._this}\`, ctx.$.i)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          if ((p = M.brk(\\"s\\", \\"138:8-138:23\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          return ctx.pure(ctx.$.i !== 2);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function f_19(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"145:8-145:20\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          return ctx.pure(true);

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}

function everyTest_1(p) {
  var everyTest = this,
      a,
      b;

  for (;;) {
    try {
      switch (everyTest.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"132:2-132:18\\")) === M.token) {
            everyTest.$state = 6;
            return p;
          } else {
            everyTest.$state = 6;
            continue;
          }

        case 6:
          everyTest.$.self = M.constr({}, \\"132:15-132:17\\");

          if ((p = M.brk(\\"s\\", \\"133:2-149:4\\")) === M.token) {
            everyTest.$state = 7;
            return p;
          } else {
            everyTest.$state = 7;
            continue;
          }

        case 7:
          a = everyTest.$$.f.rt.every;
          b = everyTest.$.v;

          if ((p = a.call(b, meta$f8({
            f: everyTest.$$.f,
            everyTest: everyTest.$
          }), everyTest.$.self)) === M.token) {
            everyTest.$state = 8;
            return p;
          } else {
            everyTest.$state = 8;
            continue;
          }

        case 8:
          everyTest.$._ = p;
          a = everyTest.$$.f.rt.every;
          b = everyTest.$.v;

          if ((p = a.call(b, meta$f9(), everyTest.$.self)) === M.token) {
            everyTest.$state = 9;
            return p;
          } else {
            everyTest.$state = 9;
            continue;
          }

        case 9:
          a = M.constr([everyTest.$._, p], \\"133:9-149:3\\");
          return everyTest.pure(a);

        case 0:
          return everyTest.pure(p);

        case 1:
          return everyTest.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return everyTest.raise(ex);
    }
  }
}

function f_110(p) {
  var ctx = this,
      a;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          ctx.$.exports.__esModule = true;
          ctx.$.exports.mapTest = ctx.$.mapTest;
          ctx.$.exports.flatMapTest = ctx.$.flatMapTest;
          ctx.$.exports.filterTest = ctx.$.filterTest;
          ctx.$.exports.findIndexTest = ctx.$.findIndexTest;
          ctx.$.exports.forEachTest = ctx.$.forEachTest;
          ctx.$.exports.reduceTest = ctx.$.reduceTest;
          ctx.$.exports.reduceRightTest = ctx.$.reduceRightTest;
          ctx.$.exports.arraySortTest = ctx.$.arraySortTest;
          ctx.$.exports.typedArraySortTest = ctx.$.typedArraySortTest;
          ctx.$.exports.someTest = ctx.$.someTest;
          ctx.$.exports.everyTest = ctx.$.everyTest;

          if ((p = M.brk(\\"s\\", \\"1:0-1:29\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          a = require(\\"./mod2\\");

          if ((p = M.unwrap(a, null)) === M.token) {
            ctx.$state = 7;
            return p;
          } else {
            ctx.$state = 7;
            continue;
          }

        case 7:
          ctx.$.M2 = p;

          if ((p = M.brk(\\"s\\", \\"2:0-2:34\\")) === M.token) {
            ctx.$state = 8;
            return p;
          } else {
            ctx.$state = 8;
            continue;
          }

        case 8:
          a = require(\\"../instr/rt\\");

          if ((p = M.unwrap(a, null)) === M.token) {
            ctx.$state = 9;
            return p;
          } else {
            ctx.$state = 9;
            continue;
          }

        case 9:
          ctx.$.rt = p;

          if ((p = M.brk(\\"s\\", \\"4:0-4:10\\")) === M.token) {
            ctx.$state = 10;
            return p;
          } else {
            ctx.$state = 10;
            continue;
          }

        case 10:
          ctx.$.j = 0;

          if ((p = M.brk(\\"s\\", \\"13:0-13:6\\")) === M.token) {
            ctx.$state = 11;
            return p;
          } else {
            ctx.$state = 11;
            continue;
          }

        case 11:
          if ((p = ctx.$.run()) === M.token) {
            ctx.$state = 12;
            return p;
          } else {
            ctx.$state = 12;
            continue;
          }

        case 12:
          if ((p = M.brk(\\"s\\", \\"14:0-14:6\\")) === M.token) {
            ctx.$state = 13;
            return p;
          } else {
            ctx.$state = 13;
            continue;
          }

        case 13:
          if ((p = ctx.$.run()) === M.token) {
            ctx.$state = 14;
            return p;
          } else {
            ctx.$state = 14;
            continue;
          }

        case 14:
          return ctx.pure();

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}"
`;

exports[`default transpiler 3`] = `
"\\"use strict\\";

var M = require(\\"../main\\");

var $module = M.module(\\"/__fixtures__/mod2.js\\"),
    meta$f = M.meta($module, function (x) {
  return function (module, exports) {
    var ctx = M.frame(x);
    ctx.$.A = meta$A({
      f: ctx.$
    });
    ctx.$.B = meta$B({
      f: ctx.$
    });
    ctx.$.f1 = meta$f1({
      f: ctx.$
    });
    ctx.$.f2 = meta$f2({
      f: ctx.$
    });
    ctx.$.module = module;
    ctx.$.exports = exports;
    return ctx.scope(this, new.target, 5);
  };
}, f_1, void 0, void 0, null, null, null, {}, [[\\"s\\", \\"1:0-1:12\\", 6]]),
    meta$f2 = M.meta($module, function (x) {
  return function _f2(i) {
    var f2 = M.frame(x);
    f2.$.i = i;
    return f2.scope(this, new.target, 5);
  };
}, f2_1, void 0, void 0, \\"f2\\", \\"21:7-24:1\\", meta$f, {}, [[\\"s\\", \\"22:2-22:8\\", 6], [\\"s\\", \\"23:2-23:32\\", 7]]),
    meta$f1 = M.meta($module, function (x) {
  return function _f1(i) {
    var f1 = M.frame(x);
    f1.$.i = i;
    return f1.scope(this, new.target, 5);
  };
}, f1_1, void 0, void 0, \\"f1\\", \\"13:7-19:1\\", meta$f, {
  a: [\\"a\\", \\"16:8-16:9\\", \\"13:22-19:1\\"]
}, [[\\"s\\", \\"14:2-14:8\\", 6], [\\"s\\", \\"15:2-15:32\\", 7], [\\"s\\", \\"16:2-16:23\\", 9], [\\"s\\", \\"17:2-17:23\\", 11], [\\"s\\", \\"18:2-18:13\\", 13]]),
    meta$B = M.meta($module, function (x) {
  return function _B(i) {
    var B = M.frame(x);
    B.$._this = this;
    B.$.i = i;
    return B.scope(this, new.target, 5);
  };
}, B_1, void 0, void 0, \\"B\\", \\"8:0-11:1\\", meta$f, {}, [[\\"s\\", \\"9:2-9:13\\", 6], [\\"s\\", \\"10:2-10:26\\", 7]]),
    meta$A = M.meta($module, function (x) {
  return function _A(i) {
    var A = M.frame(x);
    A.$._this = this;
    A.$.i = i;
    return A.scope(this, new.target, 5);
  };
}, A_1, void 0, void 0, \\"A\\", \\"3:0-6:1\\", meta$f, {}, [[\\"s\\", \\"4:2-4:24\\", 6], [\\"s\\", \\"5:2-5:22\\", 7]]);
module.exports = M.exports(meta$f());

function A_1(p) {
  var A = this,
      a;

  for (;;) {
    try {
      switch (A.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"4:2-4:24\\")) === M.token) {
            A.$state = 6;
            return p;
          } else {
            A.$state = 6;
            continue;
          }

        case 6:
          A.$._this.i = A.$.i * 10 + A.$$.f.cnt;

          if ((p = M.brk(\\"s\\", \\"5:2-5:22\\")) === M.token) {
            A.$state = 7;
            return p;
          } else {
            A.$state = 7;
            continue;
          }

        case 7:
          a = A.$$.f.B;

          if ((p = new a(100)) === M.token) {
            A.$state = 8;
            return p;
          } else {
            A.$state = 8;
            continue;
          }

        case 8:
          a = M.constr(p, \\"5:11-5:21\\");
          A.$._this.b = a;
          return A.pure();

        case 0:
          return A.pure(p);

        case 1:
          return A.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return A.raise(ex);
    }
  }
}

function B_1(p) {
  var B = this;

  for (;;) {
    try {
      switch (B.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"9:2-9:13\\")) === M.token) {
            B.$state = 6;
            return p;
          } else {
            B.$state = 6;
            continue;
          }

        case 6:
          B.$._this.i = B.$.i;

          if ((p = M.brk(\\"s\\", \\"10:2-10:26\\")) === M.token) {
            B.$state = 7;
            return p;
          } else {
            B.$state = 7;
            continue;
          }

        case 7:
          return B.pure(M.constr({
            b: B.$._this,
            cnt: B.$$.f.cnt
          }, \\"10:9-10:25\\"));

        case 0:
          return B.pure(p);

        case 1:
          return B.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return B.raise(ex);
    }
  }
}

function f1_1(p) {
  var f1 = this,
      a,
      b;

  for (;;) {
    try {
      switch (f1.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"14:2-14:8\\")) === M.token) {
            f1.$state = 6;
            return p;
          } else {
            f1.$state = 6;
            continue;
          }

        case 6:
          f1.$$.f.cnt++;

          if ((p = M.brk(\\"s\\", \\"15:2-15:32\\")) === M.token) {
            f1.$state = 7;
            return p;
          } else {
            f1.$state = 7;
            continue;
          }

        case 7:
          if ((p = console.log(\`f1:\${f1.$.i}@\${f1.$$.f.cnt}\`)) === M.token) {
            f1.$state = 8;
            return p;
          } else {
            f1.$state = 8;
            continue;
          }

        case 8:
          if ((p = M.brk(\\"s\\", \\"16:2-16:23\\")) === M.token) {
            f1.$state = 9;
            return p;
          } else {
            f1.$state = 9;
            continue;
          }

        case 9:
          a = f1.$$.f.A;
          b = f1.$$.f.cnt;

          if ((p = new a(b)) === M.token) {
            f1.$state = 10;
            return p;
          } else {
            f1.$state = 10;
            continue;
          }

        case 10:
          a = M.constr(p, \\"16:12-16:22\\");
          f1.$.a = a;

          if ((p = M.brk(\\"s\\", \\"17:2-17:23\\")) === M.token) {
            f1.$state = 11;
            return p;
          } else {
            f1.$state = 11;
            continue;
          }

        case 11:
          if ((p = console.log(\\"A:\\", f1.$.a)) === M.token) {
            f1.$state = 12;
            return p;
          } else {
            f1.$state = 12;
            continue;
          }

        case 12:
          if ((p = M.brk(\\"s\\", \\"18:2-18:13\\")) === M.token) {
            f1.$state = 13;
            return p;
          } else {
            f1.$state = 13;
            continue;
          }

        case 13:
          return f1.pure(f1.$$.f.cnt);

        case 0:
          return f1.pure(p);

        case 1:
          return f1.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return f1.raise(ex);
    }
  }
}

function f2_1(p) {
  var f2 = this;

  for (;;) {
    try {
      switch (f2.$state) {
        case 5:
          if ((p = M.brk(\\"s\\", \\"22:2-22:8\\")) === M.token) {
            f2.$state = 6;
            return p;
          } else {
            f2.$state = 6;
            continue;
          }

        case 6:
          f2.$$.f.cnt++;

          if ((p = M.brk(\\"s\\", \\"23:2-23:32\\")) === M.token) {
            f2.$state = 7;
            return p;
          } else {
            f2.$state = 7;
            continue;
          }

        case 7:
          if ((p = console.log(\`f2:\${f2.$.i}@\${f2.$$.f.cnt}\`)) === M.token) {
            f2.$state = 8;
            return p;
          } else {
            f2.$state = 8;
            continue;
          }

        case 8:
          return f2.pure();

        case 0:
          return f2.pure(p);

        case 1:
          return f2.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return f2.raise(ex);
    }
  }
}

function f_1(p) {
  var ctx = this;

  for (;;) {
    try {
      switch (ctx.$state) {
        case 5:
          ctx.$.exports.__esModule = true;
          ctx.$.exports.f1 = ctx.$.f1;
          ctx.$.exports.f2 = ctx.$.f2;

          if ((p = M.brk(\\"s\\", \\"1:0-1:12\\")) === M.token) {
            ctx.$state = 6;
            return p;
          } else {
            ctx.$state = 6;
            continue;
          }

        case 6:
          ctx.$.cnt = 0;
          return ctx.pure();

        case 0:
          return ctx.pure(p);

        case 1:
          return ctx.raise(p);

        default:
          throw new Error(\\"invalid state\\");
      }
    } catch (ex) {
      return ctx.raise(ex);
    }
  }
}"
`;
