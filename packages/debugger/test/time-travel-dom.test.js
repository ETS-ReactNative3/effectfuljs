require("./setup-time-travel");
const trace = require("./run");
trace.silent = true;
const D = require("../main");
const SD = require("@effectful/serialization/dom");
const S = require("@effectful/serialization");

test("DOM time traveling", function() {
  try {
    SD.trackGlobalDocument();
    document.body.innerHTML = `<div id="root"></div>`;
    document.body.deb_trace = true;
    const mod = trace(D.evalThunk(require("./__fixtures__/tt/dom")));
    D.TimeTravel.DOM.track(document.getElementById("root"));
    D.TimeTravel.reset();
    const j = D.TimeTravel.journal;
    const text0 = document.body.innerHTML;
    j.enabled = false;
    expect(text0).toMatchSnapshot();
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom1());
    document.body.deb_trace = false;
    const text1 = document.body.innerHTML;
    j.enabled = false;
    expect(text1).toMatchSnapshot();
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom2());
    const text2 = document.body.innerHTML;
    j.enabled = false;
    expect(text2).toMatchSnapshot();
    expect(document.body.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom3());
    const text3 = document.body.innerHTML;
    j.enabled = false;
    expect(text3).toMatchSnapshot();
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom4());
    const text4 = document.body.innerHTML;
    j.enabled = false;
    expect(text4).toMatchSnapshot();
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text2);
    expect(document.body.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text2);
    expect(document.body.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text1);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text0);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text1);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text2);
    expect(document.body.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    const data = S.write(
      {
        now: j.now,
        future: j.future,
        past: j.past,
        data: document.body
      },
      { ignore: "placeholder" }
    );
    expect(JSON.stringify(data)).toMatchSnapshot();
    const oldDoc = document.documentElement;
    D.TimeTravel.DOM.untrack(document.getElementById("root"));
    document.body.innerHTML = "";
    const restored = S.read(data);
    document.body.replaceWith(restored.data);
    D.TimeTravel.DOM.track(document.getElementById("root"));
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    Object.assign(D.TimeTravel.journal, restored);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text2);
    expect(document.body.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text1);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text0);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text0);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text1);
    expect(document.body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text2);
    expect(document.body.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text3);
    expect(document.body.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(document.body.innerHTML).toBe(text4);
    expect(document.body.deb_hi).toBe(undefined);
    j.enabled = true;
  } finally {
    D.TimeTravel.journal.enabled = false;
    D.TimeTravel.reset(false);
  }
});
