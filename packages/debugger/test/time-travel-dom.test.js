/**
 * @jest-environment jsdom
 */

require("./setup-time-travel");
const trace = require("./run");
trace.silent = true;
const D = require("../main");
const SD = require("@effectful/serialization/dom");
const S = require("@effectful/serialization");

test("DOM time traveling", function() {
  try {
    SD.track();
    let body = document.createElement("div");
    document.body.append(body);
    body.innerHTML = `<div id="root"></div>`;
    const mod = trace(D.force(require("./__fixtures__/tt/dom")));
    const root = document.getElementById("root");
    D.TimeTravel.DOM.track(root);
    D.TimeTravel.reset();
    const j = D.TimeTravel.journal;
    const text0 = body.innerHTML;
    j.enabled = false;
    expect(text0).toMatchSnapshot();
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom1());
    const text1 = body.innerHTML;
    j.enabled = false;
    expect(text1).toMatchSnapshot();
    expect(root).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom2());
    const text2 = body.innerHTML;
    j.enabled = false;
    expect(text2).toMatchSnapshot();
    expect(root.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom3());
    const text3 = body.innerHTML;
    j.enabled = false;
    expect(text3).toMatchSnapshot();
    expect(root.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.checkpoint();
    trace(mod.changeDom4());
    const text4 = body.innerHTML;
    j.enabled = false;
    expect(text4).toMatchSnapshot();
    expect(root.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text3);
    expect(root.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text4);
    expect(root.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text3);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text2);
    expect(root.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text3);
    expect(root.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text4);
    expect(root.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text3);
    expect(root.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text2);
    expect(root.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text1);
    expect(body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text0);
    expect(body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text1);
    expect(body).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text2);
    expect(root.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text3);
    expect(root.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text4);
    expect(root.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text4);
    expect(root.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body.innerHTML).toBe(text3);
    expect(root.deb_hi).toBe("THERE");
    const data = S.write(
      {
        now: j.now,
        future: j.future,
        past: j.past,
        data: body
      },
      { ignore: "opaque", alwaysByRef: true }
    );
    // TODO: windows paths
    // expect(JSON.stringify(data)).toMatchSnapshot();
    D.TimeTravel.DOM.untrack(root);
    body.innerHTML = "";
    const restored = S.read(data);
    const body2 = restored.data;
    body.replaceWith(body2);
    const root2 = body2.children[0];
    D.TimeTravel.DOM.track(root2);
    expect(body2.innerHTML).toBe(text3);
    expect(root2.deb_hi).toBe("THERE");
    Object.assign(D.TimeTravel.journal, restored);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text4);
    expect(root2.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text4);
    expect(root2.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.undo();
    expect(body2.innerHTML).toBe(text3);
    expect(root2.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text2);
    expect(root2.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text1);
    expect(body2).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text0);
    expect(body2).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.undo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text0);
    expect(body2).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text1);
    expect(body2).not.toHaveProperty("deb_hi");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text2);
    expect(root2.deb_hi).toBe("there");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text3);
    expect(root2.deb_hi).toBe("THERE");
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text4);
    expect(root2.deb_hi).toBe(undefined);
    j.enabled = true;
    D.TimeTravel.redo();
    j.enabled = false;
    expect(body2.innerHTML).toBe(text4);
    expect(root2.deb_hi).toBe(undefined);
    j.enabled = true;
  } finally {
    D.TimeTravel.journal.enabled = false;
    D.TimeTravel.reset(false);
  }
});
