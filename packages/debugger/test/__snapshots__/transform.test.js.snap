// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`default transpiler 1`] = `
"\\"use strict\\";

var M = require(\\"../../api\\");

var $module = M.module(\\"/test/__fixtures__/code.js\\", module),
    v_1 = [{
  mod: \\"mod\\",
  v0: \\"v0\\",
  C: \\"C\\"
}, null],
    v_4 = [{
  fn1: \\"fn1\\",
  v5: \\"v5\\"
}, v_1],
    v_2 = [{
  a: \\"a\\",
  v3: \\"v3\\",
  i: \\"i1\\",
  v4: \\"v4\\",
  v1: \\"v1\\",
  e: \\"e\\"
}, v_1],
    v_3 = [{
  a: \\"a\\",
  v3: \\"v3\\",
  i: \\"i1\\",
  v4: \\"v4\\",
  v1: \\"v1\\",
  e: \\"e\\",
  v2: \\"v2\\"
}, v_1],
    meta$f = M.fun($module, function (x) {
  return function (module, exports) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.module = module;
    $.$.exports = exports;
    $.$.C = meta$C($);
    {
      try {
        $.goto = 5;
        M.brk(0);
        return f_1($, p);
      } catch (e) {
        return M.handle($, e);
      }
    }
  };
}, f_1, void 0, void 0, [[[{}, null], null, \\"1:0-1:31\\"], [v_1, null, \\"3:0-3:12\\"], [v_1, null, \\"21:0-24:2\\"]], \\"f\\", \\"1:0-25:0\\", null, [\\"module\\", \\"exports\\"]),
    meta$fn1 = M.fun($module, function (x) {
  return function fn1() {
    var $ = M.frame(x, this, new.target),
        p;

    try {
      $.goto = 5;
      M.brk(0);
      return fn1_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, fn1_1, void 0, void 0, [[v_4, null, \\"22:2-22:16\\"], [v_4, null, \\"23:2-23:55\\"]], \\"fn1\\", \\"21:14-24:1\\", meta$f, []),
    meta$C = M.fun($module, function (x) {
  return function C(a) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.a = a;

    try {
      $.goto = 5;
      M.brk(0);
      return C_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, C_1, C_err, C_fin, [[v_2, null, \\"6:2-6:14\\"], [v_2, null, \\"7:2-18:3\\"], [v_3, null, \\"8:4-8:18\\"], [v_3, null, \\"9:4-9:11\\"], [v_3, null, \\"10:4-10:42\\"], [v_3, null, \\"11:4-13:5\\"], [[{
  a: \\"a\\",
  v3: \\"v3\\",
  i: \\"i\\",
  v4: \\"v4\\",
  v1: \\"v1\\",
  e: \\"e\\",
  v2: \\"v2\\"
}, v_1], null, \\"12:6-12:19\\"], [v_3, null, \\"14:4-14:42\\"], [v_3, null, \\"14:29-14:42\\"], [v_3, null, \\"15:4-15:17\\"], [v_2, null, \\"17:4-17:24\\"]], \\"C\\", \\"5:0-19:1\\", meta$f, [\\"a\\"]);
module.exports = M.wrapExport(meta$f(null));

function C_err(s) {
  switch (s) {
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 17:
    case 18:
    case 23:
    case 24:
      return 29;

    case 13:
    case 14:
    case 15:
      return 30;

    case 16:
      return 32;

    case 19:
    case 20:
    case 21:
      return 33;

    case 22:
      return 35;

    default:
      return 1;
  }
}

function C_fin(s) {
  switch (s) {
    case 13:
    case 14:
    case 15:
      return 31;

    case 19:
    case 20:
    case 21:
      return 34;

    default:
      return 0;
  }
}

function C_1($, p) {
  var i, a, b;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$.v1 = 10;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        $.goto = 7;
        M.brk(2);
        $.state = 7;

      case 7:
        $.$.v2 = 11;
        $.goto = 8;
        M.brk(3);
        $.state = 8;

      case 8:
        $.goto = 9;
        M.brk(4);
        $.state = 9;

      case 9:
        $.goto = 10;
        p = (M.context.call = $.$$.$.mod.fn1).call($.$$.$.mod, $.$.a);
        $.state = 10;

      case 10:
        $.goto = 11;
        (M.context.call = $.$$.$.mod.proc1).call($.$$.$.mod, p, $.$$.$.v0, $.$.v1, $.$.v2, $.$.v3);
        $.state = 11;

      case 11:
        $.goto = 12;
        M.brk(5);
        $.state = 12;

      case 12:
        $.$.loop = M.iterator(something);
        $.goto = 13;
        $.state = 13;

      case 13:
        $.goto = 14;
        p = (M.context.call = $.$.loop.next).call($.$.loop);
        $.state = 14;

      case 14:
        b = i = p;
        a = b.done;

        if (!a) {
          $.$.i = i.value;
          $.goto = 15;
          M.brk(6);
          $.state = 15;
        } else {
          $.$.fc = 17;
          $.goto = 16;
          continue;
        }

      case 15:
        $.goto = 13;
        (M.context.call = $.$$.$.mod.proc2).call($.$$.$.mod, $.$.i);
        continue;

      case 16:
        if ($.$.loop.return) {
          $.$.ex = $.$.err1;
          $.goto = $.$.fc;
          (M.context.call = $.$.loop.return).call($.$.loop);
          continue;
        } else {
          $.$.ex = $.$.err1;
          $.goto = $.$.fc;
          continue;
        }

      case 17:
        $.goto = 18;
        M.brk(7);
        $.state = 18;

      case 18:
        $.$.loop1 = M.iterator(something);
        $.goto = 19;
        $.state = 19;

      case 19:
        $.goto = 20;
        p = (M.context.call = $.$.loop1.next).call($.$.loop1);
        $.state = 20;

      case 20:
        b = i = p;
        a = b.done;

        if (!a) {
          $.$.i1 = i.value;
          $.goto = 21;
          M.brk(8);
          $.state = 21;
        } else {
          $.$.fc1 = 23;
          $.goto = 22;
          continue;
        }

      case 21:
        $.goto = 19;
        (M.context.call = $.$$.$.mod.proc3).call($.$$.$.mod, $.$.i1);
        continue;

      case 22:
        if ($.$.loop1.return) {
          $.$.ex = $.$.err2;
          $.goto = $.$.fc1;
          (M.context.call = $.$.loop1.return).call($.$.loop1);
          continue;
        } else {
          $.$.ex = $.$.err2;
          $.goto = $.$.fc1;
          continue;
        }

      case 23:
        $.goto = 24;
        M.brk(9);
        $.state = 24;

      case 24:
        $.$.v4 = 100;
        $.goto = 27;
        continue;

      case 25:
        $.$.e = $.$.ex;
        $.goto = 26;
        M.brk(10);
        $.state = 26;

      case 26:
        $.goto = 27;
        (M.context.call = $.$$.$.mod.proc4).call($.$$.$.mod, $.$.e, $.$.v4, $.$.i1);
        $.state = 27;

      case 27:
        return M.ret();

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      case 28:
        $.goto = 0;
        p = $.$.r;
        continue;

      case 29:
        $.$.ex = p;
        $.goto = 25;
        continue;

      case 30:
        $.$.fc = 25, $.$.err1 = p;
        $.goto = 16;
        continue;

      case 31:
        $.$.fc = 28, $.$.r = p;
        $.goto = 16;
        continue;

      case 32:
        $.$.ex = p;
        $.goto = 25;
        continue;

      case 33:
        $.$.fc1 = 25, $.$.err2 = p;
        $.goto = 22;
        continue;

      case 34:
        $.$.fc1 = 28, $.$.r = p;
        $.goto = 22;
        continue;

      case 35:
        $.$.ex = p;
        $.goto = 25;
        continue;

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function fn1_1($, p) {
  var a;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$.v5 = 10;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        $.goto = 7;
        p = (M.context.call = $.$$.$.mod.f2).call($.$$.$.mod);
        $.state = 7;

      case 7:
        $.$._ = p;
        a = $.$$.$.C;
        $.goto = 8;
        p = new (M.context.call = a)($.$$.$.v0, $.$.v5);
        $.state = 8;

      case 8:
        $.goto = 9;
        p = (M.context.call = $.$$.$.mod.some).call($.$$.$.mod, {
          a: $.$._,
          b: [p]
        });
        $.state = 9;

      case 9:
        return M.ret(p);

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function f_1($, p) {
  var a;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        a = require(\\"mod\\");
        $.goto = 6;
        p = M.unwrapImport(a, \\"mod\\");
        $.state = 6;

      case 6:
        ({
          mod: $.$.mod
        } = p);
        $.goto = 7;
        M.brk(1);
        $.state = 7;

      case 7:
        $.$.v0 = 10;
        $.goto = 8;
        M.brk(2);
        $.state = 8;

      case 8:
        $.$.exports.fn2 = meta$fn1($);
        return M.ret();

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}"
`;

exports[`default transpiler 2`] = `
"\\"use strict\\";

var M = require(\\"../../api\\");

var $module = M.module(\\"/test/__fixtures__/mod1.js\\", module),
    v_1 = [{
  j: \\"j\\",
  run: \\"run\\"
}, null],
    v_2 = [{
  i: \\"i\\"
}, v_1],
    meta$f = M.fun($module, function (x) {
  return function (module, exports) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.module = module;
    $.$.exports = exports;
    $.$.run = meta$run($);
    {
      try {
        $.$.exports.__esModule = true;
        $.$.exports.run = $.$.run;
        $.goto = 5;
        M.brk(0);
        return f_1($, p);
      } catch (e) {
        return M.handle($, e);
      }
    }
  };
}, f_1, void 0, void 0, [[[{}, null], null, \\"1:0-1:29\\"], [v_1, null, \\"3:0-3:10\\"], [v_1, null, \\"12:0-12:6\\"], [v_1, null, \\"13:0-13:6\\"]], \\"f\\", \\"1:0-14:0\\", null, [\\"module\\", \\"exports\\"]),
    meta$run = M.fun($module, function (x) {
  return function run(i = 1) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.i = i;

    try {
      $.goto = 5;
      M.brk(0);
      return run_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, run_1, void 0, void 0, [[v_2, null, \\"6:2-6:9\\"], [v_2, null, \\"7:2-7:23\\"], [v_2, null, \\"8:2-8:9\\"], [v_2, null, \\"9:2-9:31\\"]], \\"run\\", \\"5:7-10:1\\", meta$f, [\\"i\\"]);
module.exports = M.wrapExport(meta$f(null));

function run_1($, p) {
  var a;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$$.$.j += $.$.i;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        a = $.$.i++;
        $.goto = 7;
        p = (M.context.call = $.$$.$.M2.f1).call($.$$.$.M2, a);
        $.state = 7;

      case 7:
        $.goto = 8;
        (M.context.call = $.$$.$.M2.f2).call($.$$.$.M2, p, $.$.i);
        $.state = 8;

      case 8:
        $.goto = 9;
        M.brk(2);
        $.state = 9;

      case 9:
        $.$$.$.j += $.$.i;
        $.goto = 10;
        M.brk(3);
        $.state = 10;

      case 10:
        $.goto = 11;
        (M.context.call = console.log).call(console, \`i:\${$.$.i},j:\${$.$$.$.j}\`);
        $.state = 11;

      case 11:
        return M.ret();

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function f_1($, p) {
  var a;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        a = require(\\"./mod2\\");
        $.goto = 6;
        p = M.unwrapImport(a, \\"./mod2\\");
        $.state = 6;

      case 6:
        $.$.M2 = p;
        $.goto = 7;
        M.brk(1);
        $.state = 7;

      case 7:
        $.$.j = 0;
        $.goto = 8;
        M.brk(2);
        $.state = 8;

      case 8:
        $.goto = 9;
        (M.context.call = $.$.run)();
        $.state = 9;

      case 9:
        $.goto = 10;
        M.brk(3);
        $.state = 10;

      case 10:
        $.goto = 11;
        (M.context.call = $.$.run)();
        $.state = 11;

      case 11:
        return M.ret();

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}"
`;

exports[`default transpiler 3`] = `
"\\"use strict\\";

var M = require(\\"../../api\\");

var $module = M.module(\\"/test/__fixtures__/mod2.js\\", module),
    v_1 = [{
  cnt: \\"cnt\\",
  A: \\"A\\",
  B: \\"B\\",
  f1: \\"f1\\",
  f2: \\"f2\\"
}, null],
    v_5 = [{
  i: \\"i\\"
}, v_1],
    v_4 = [{
  i: \\"i\\",
  a: \\"a\\"
}, v_1],
    v_3 = [{
  i: \\"i\\"
}, v_1],
    v_2 = [{
  i: \\"i\\"
}, v_1],
    meta$f = M.fun($module, function (x) {
  return function (module, exports) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.module = module;
    $.$.exports = exports;
    $.$.A = meta$A($);
    $.$.B = meta$B($);
    $.$.f1 = meta$f1($);
    $.$.f2 = meta$f2($);
    {
      try {
        $.$.exports.__esModule = true;
        $.$.exports.f1 = $.$.f1;
        $.$.exports.f2 = $.$.f2;
        $.goto = 5;
        M.brk(0);
        return f_1($, p);
      } catch (e) {
        return M.handle($, e);
      }
    }
  };
}, f_1, void 0, void 0, [[[{}, null], null, \\"1:0-1:12\\"]], \\"f\\", \\"1:0-25:0\\", null, [\\"module\\", \\"exports\\"]),
    meta$f2 = M.fun($module, function (x) {
  return function f2(i) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.i = i;

    try {
      $.goto = 5;
      M.brk(0);
      return f2_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, f2_1, void 0, void 0, [[v_5, null, \\"22:2-22:8\\"], [v_5, null, \\"23:2-23:32\\"]], \\"f2\\", \\"21:7-24:1\\", meta$f, [\\"i\\"]),
    meta$f1 = M.fun($module, function (x) {
  return function f1(i) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.i = i;

    try {
      $.goto = 5;
      M.brk(0);
      return f1_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, f1_1, void 0, void 0, [[v_4, null, \\"14:2-14:8\\"], [v_4, null, \\"15:2-15:32\\"], [v_4, null, \\"16:2-16:23\\"], [v_4, null, \\"17:2-17:23\\"], [v_4, null, \\"18:2-18:13\\"]], \\"f1\\", \\"13:7-19:1\\", meta$f, [\\"i\\"]),
    meta$B = M.fun($module, function (x) {
  return function B(i) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.i = i;
    $.$._this = this;

    try {
      $.goto = 5;
      M.brk(0);
      return B_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, B_1, void 0, void 0, [[v_3, null, \\"9:2-9:13\\"], [v_3, null, \\"10:2-10:26\\"]], \\"B\\", \\"8:0-11:1\\", meta$f, [\\"i\\"]),
    meta$A = M.fun($module, function (x) {
  return function A(i) {
    var $ = M.frame(x, this, new.target),
        p;
    $.$.i = i;
    $.$._this = this;

    try {
      $.goto = 5;
      M.brk(0);
      return A_1($, p);
    } catch (e) {
      return M.handle($, e);
    }
  };
}, A_1, void 0, void 0, [[v_2, null, \\"4:2-4:24\\"], [v_2, null, \\"5:2-5:22\\"]], \\"A\\", \\"3:0-6:1\\", meta$f, [\\"i\\"]);
module.exports = M.wrapExport(meta$f(null));

function A_1($, p) {
  var a;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$._this.i = $.$.i * 10 + $.$$.$.cnt;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        a = $.$$.$.B;
        $.goto = 7;
        p = new (M.context.call = a)(100);
        $.state = 7;

      case 7:
        $.$._this.b = p;
        return M.ret();

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function B_1($, p) {
  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$._this.i = $.$.i;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        return M.ret({
          b: $.$._this,
          cnt: $.$$.$.cnt
        });

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function f1_1($, p) {
  var a, b;

  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$$.$.cnt++;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        $.goto = 7;
        (M.context.call = console.log).call(console, \`f1:\${$.$.i}@\${$.$$.$.cnt}\`);
        $.state = 7;

      case 7:
        $.goto = 8;
        M.brk(2);
        $.state = 8;

      case 8:
        a = $.$$.$.A;
        b = $.$$.$.cnt;
        $.goto = 9;
        p = new (M.context.call = a)(b);
        $.state = 9;

      case 9:
        $.$.a = p;
        $.goto = 10;
        M.brk(3);
        $.state = 10;

      case 10:
        $.goto = 11;
        (M.context.call = console.log).call(console, \\"A:\\", $.$.a);
        $.state = 11;

      case 11:
        $.goto = 12;
        M.brk(4);
        $.state = 12;

      case 12:
        return M.ret($.$$.$.cnt);

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function f2_1($, p) {
  for (;;) {
    switch ($.state = $.goto) {
      case 5:
        $.$$.$.cnt++;
        $.goto = 6;
        M.brk(1);
        $.state = 6;

      case 6:
        $.goto = 7;
        (M.context.call = console.log).call(console, \`f2:\${$.$.i}@\${$.$$.$.cnt}\`);
        $.state = 7;

      case 7:
        return M.ret();

      case 0:
        return M.ret(p);

      case 1:
        return M.unhandled(p);

      default:
        throw new Error(\\"invalid state\\");
    }
  }
}

function f_1($, p) {
  switch ($.state = $.goto) {
    case 5:
      $.$.cnt = 0;
      return M.ret();

    case 0:
      return M.ret(p);

    case 1:
      return M.unhandled(p);

    default:
      throw new Error(\\"invalid state\\");
  }
}"
`;
